'''
Problem Statement #

Given a word, write a function to generate all of its unique generalized abbreviations.

Generalized abbreviation of a word can be generated by replacing each substring of the word by the count of characters
in the substring. Take the example of “ab” which has four substrings: “”, “a”, “b”, and “ab”. After replacing these
substrings in the actual word by the count of characters we get all the generalized abbreviations: “ab”, “1b”, “a1”,
and “2”.
'''

from collections import  deque




def generate_generalized_abbreviation(words):
  result = []
  abbrev = deque()
  abbrev.append([])
  for ch in words:
    n = len(abbrev)
    for i in range (n):
        ab = abbrev.popleft()
        ab_copy = ab.copy()
        ab_copy.append(1)
        abbrev.append(ab_copy)
        ab_copy2 = ab.copy()
        ab_copy2.append(ch)
        abbrev.append(ab_copy2)
  for _ in range (len(abbrev)) :
      ch = abbrev.popleft()
      count_abbs = 0
      abb_str = ""
      i=0
      while (i < len(ch)):
          if(ch[i] == 1):
              while ( i<len(ch) and ch[i] == 1 ):
                  count_abbs+=1
                  i+=1
              abb_str += str(count_abbs)
              count_abbs=0
          else:
              abb_str += str(ch[i])
              i+=1
      result.append(abb_str)


  return result


def main():
  print("Generalized abbreviation are: " +
        str(generate_generalized_abbreviation("BAT")))
  print("Generalized abbreviation are: " +
        str(generate_generalized_abbreviation("code")))


main()
